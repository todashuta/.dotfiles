# gitconfig

# [include]
#     path = ~/path/to/gitconfig

# # github.comでgitプロトコルの代わりにhttpsを使用する
# [url "https://github.com/"]
#     insteadOf = "git://github.com/"
# # httpsの代わりにsshを使用する
# [url "git@github.com:"]
#     insteadOf = "https://github.com/"
# # httpsの代わりにsshを使用する(ユーザー名も限定)
# [url "git@github.com:todashuta/"]
#     insteadOf = "https://github.com/todashuta/"

# [core]
#     autocrlf = false
#     attributesfile = ~/dotfiles/.gitattributes_global
#     preloadindex = true
#     fscache = true
#     #precomposeunicode = true  # for macOS
# [gc]
#     auto = 256
# [merge]
#     tool = myvimdiff
# [mergetool "myvimdiff"]
#     cmd = "c:/vim/vim.exe -d -c \"4wincmd w | wincmd J\" \"$LOCAL\" \"$BASE\" \"$REMOTE\" \"$MERGED\""
# [ghq]
#     # root が複数設定されている場合、
#     # 最後のものが ghq get の取得先になる
#     root = ~/go/src
#     root = D:/path/to/primary/dir
# [push]
#     default = simple
# [init]
#     defaultBranch = main
# [pager]
#     diff = perl /usr/share/doc/git/contrib/diff-highlight/diff-highlight | less -FRX -S --shift 5
#     log  = perl /usr/share/doc/git/contrib/diff-highlight/diff-highlight | less -FRX -S --shift 5
#     show = perl /usr/share/doc/git/contrib/diff-highlight/diff-highlight | less -FRX -S --shift 5

# [safe]
#     # safe.directory
#     #   .git/ が入っているディレクトリを設定する。
#     #     より上位のディレクトリを設定してまとめて... というのはできず、リポジトリ毎に設定が必要。
#     #   追加する場合は directory = ... の行を増やしていく。
#     #   %(prefix) はそのままそのように書く。
#     #   値の「"」はなくても構わないが「'」にするのはダメ。
#     directory = "%(prefix)///other-pc-name/c$/Work/Projects/foobar"

# # SSH鍵でコミットの署名を行う
# [commit]
#     gpgsign = true
# [gpg]
#     format = ssh
# [user]
#     signingkey = "公開鍵(.pub)の中身"

# [credential]
#     helper =  # HOMEのgitconfigでグローバル設定を上書きする場合はこの空白エントリが必要。参考: https://aka.ms/gcm/rename
#     helper = P:/scoop/apps/git/current/mingw64/bin/git-credential-manager.exe  # パスは適宜変更する

[color]
	status = auto
	diff = auto
	branch = auto
	interactive = auto
	grep = auto
[commit]
	verbose = true
[alias]
	s = status -uno --show-stash
	ss = status -sb --show-stash
	ap = add --patch
	b = branch -vv
	d  = diff
	df = diff HEAD..FETCH_HEAD
	dfs = diff HEAD..FETCH_HEAD --stat
	dw = diff --color-words
	fp = fetch -p
	l  = log --graph --stat --decorate --date=format-local:'%Y-%m-%d (%a) %H:%M:%S'
	la = log --graph --stat --decorate --date=format-local:'%Y-%m-%d (%a) %H:%M:%S' --all
	ll  = log --graph --patch --decorate --date=format-local:'%Y-%m-%d (%a) %H:%M:%S'
	lla = log --graph --patch --decorate --date=format-local:'%Y-%m-%d (%a) %H:%M:%S' --all
	lg = log --graph --pretty=format:'%C(yellow)%h%C(reset) -%C(auto)%d%C(reset) %s %C(green)(%cr) %C(bold blue)<%an>%C(reset)' --abbrev-commit --date=relative
	lga = log --graph --all --pretty=format:'%C(yellow)%h%C(reset) -%C(auto)%d%C(reset) %s %C(green)(%cr) %C(bold blue)<%an>%C(reset)' --abbrev-commit --date=relative
	lf = log HEAD..FETCH_HEAD
	summary = status -s -u -b
	contributors = shortlog -s -n
	#wdiff = diff --word-diff
	#hdiff = diff --diff-algorithm=histogram
	unstage = reset HEAD --
	precommit = diff --staged --diff-algorithm=histogram
	branches = branch -a -vv
	tags = tag
	stashes = stash list
	remotes = remote -v
	amend = commit --amend
	discard = checkout --
[core]
	editor = vim
	pager = less -S --shift 5
	#pager = lv -c
[merge]
	tool = vimdiff
	conflictstyle = diff3
[mergetool]
	prompt = false
	keepBackup = false
[diff]
	algorithm = histogram
	colorMoved = dimmed_zebra
[pull]
	rebase = true
[tig]
	vertical-split = no
	line-graphics = ascii
	main-view = id date author commit-title:graph=yes,refs=yes

# end of gitconfig
